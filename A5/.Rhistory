u = numeric(n)
for (i in 1:n){
x = (171*(x-1)) %% 30269
u[i] = x/30269
}
return(u)
}
#b.
myrandom(10,25)
#b.
set.seed(25)
myrandom(10,25)
# Question 5
#a.
myrandom  = function(n,x0){
set.seed(x0)
x = x0
u = numeric(n)
for (i in 1:n){
x = 171*x-1 %% 30269
u[i] = x/30269
}
return(u)
}
#b.
set.seed(25)
myrandom(10,25)
# Question 5
#a.
myrandom  = function(n,x0){
set.seed(x0)
x = x0
u = numeric(n)
for (i in 1:n){
x = 171*(x-1) %% 30269
u[i] = x/30269
}
return(u)
}
#b.
set.seed(25)
myrandom(10,25)
x = (171*(x-1)) %% 30269
u[i] = x/30269
# Question 5
#a.
myrandom  = function(n,x0){
set.seed(x0)
x = x0
u = numeric(n)
for (i in 1:n){
x = (171*(x-1)) %% 30269
u[i] = x/30269
}
return(u)
}
#b.
set.seed(25)
#b.
myrandom(10,25)
# Question 6
myguesses = function(n){
myrandom(n,325)
}
myguesses(20)
# Question 6
#a.
myguesses = function(n){
myrandom(n,325)
u = x - floor(x)
}
#b.
x = myguesses(20)
Print(sum(x) + " are correct")
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u <- x - floor(x)
y <- as.integer(u <= .25)
return(y)
}
#b.
x = myguesses(20)
Print(sum(x) + " are correct")
u <- x - floor(x)
y <- as.integer(u <= .25)
return(y)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u <- x - floor(x)
y <- as.integer(u <= .25)
return(y)
}
#b.
x = myguesses(20)
print(sum(x) + " are correct")
cat(sum(x) + " are correct")
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u <- x - floor(x)
y <- as.integer(u <= .25)
return(y)
}
#b.
myguesses(20)
cat(sum(myguesses(20)) + " are correct")
#b.
myguesses(20)
cat(sum(myguesses(20)), " are correct")
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u <- x - floor(x)
y <- as.integer(u <= .25)
return(y)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), " answers were correct")
# Question 1
#a.
secant = function(x1,x2,f){
x3 <- x2-(f(x2)*(x2-x1)/(f(x2)-f(x1)))
x4 <- x3-(f(x3)*(x3-x2)/(f(x3)-f(x2)))
x5 <- x4-(f(x4)*(x4-x3)/(f(x4)-f(x3)))
x6 <- x5-(f(x5)*(x5-x4)/(f(x5)-f(x4)))
return(x6)
}
#b.
f = function(x){
cos(x)
}
secant(1.56, 1.58, f)
#c)
f = function(x){
((x^3)-(2*x)+3)
}
secant(-2,-1.8, f)
# Question 2
#a.
WHunif = function(n,x,y,z){
u = numeric(n)
for (i in 1:n){
x =  (171*(x-1)) %% 30269
y = (172*(x-1)) %% 30307
z = (170*(x-1)) %% 30323
v = (x/30269) + (y/30307) + (z/30323)
u[i] = v - floor(v)
}
return(u)
}
#b.
WHunif(20,1,2,3)
# Question 3
#a.
WHcointoss = function(n, p){
tosses = WHunif(n, 1, 2, 3)
results = numeric(n)
for(i in 1:length(tosses)){
if(tosses[i] > p){
results[i] <- 1
}else{
results[i] <- 0
}
}
return(results)
}
#b.
WHcointoss(20, 0.5)
# Question 4
func = function(x){
return(log(x)+x)
}
secant(0.5,1,func)
# Question 5
#a.
myrandom  = function(n,x0){
set.seed(x0)
x = x0
toReturn = numeric(n)
for (i in 1:n){
x = (171*(x-1)) %% 30269
toReturn[i] = x/30269
}
return(toReturn)
}
#b.
myrandom(10,25)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u <- x - floor(x)
y <- as.integer(u <= .25)
return(y)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), "  out of 20 answers were correct")
# Question 1
#a.
secant = function(x1,x2,f){
x3 <- x2-(f(x2)*(x2-x1)/(f(x2)-f(x1)))
x4 <- x3-(f(x3)*(x3-x2)/(f(x3)-f(x2)))
x5 <- x4-(f(x4)*(x4-x3)/(f(x4)-f(x3)))
x6 <- x5-(f(x5)*(x5-x4)/(f(x5)-f(x4)))
return(x6)
}
#b.
f = function(x){
cos(x)
}
secant(1.56, 1.58, f)
#c)
f = function(x){
((x^3)-(2*x)+3)
}
secant(-2,-1.8, f)
# Question 2
#a.
WHunif = function(n,x,y,z){
u = numeric(n)
for (i in 1:n){
x =  (171*(x-1)) %% 30269
y = (172*(x-1)) %% 30307
z = (170*(x-1)) %% 30323
v = (x/30269) + (y/30307) + (z/30323)
u[i] = v - floor(v)
}
return(u)
}
#b.
WHunif(20,1,2,3)
# Question 3
#a.
WHcointoss = function(n, p){
tosses = WHunif(n, 1, 2, 3)
results = numeric(n)
for(i in 1:length(tosses)){
if(tosses[i] > p){
results[i] <- 1
}else{
results[i] <- 0
}
}
return(results)
}
#b.
WHcointoss(20, 0.5)
# Question 4
func = function(x){
return(log(x)+x)
}
secant(0.5,1,func)
# Question 5
#a.
myrandom  = function(n,x0){
set.seed(x0)
x = x0
toReturn = numeric(n)
for (i in 1:n){
x = (171*(x-1)) %% 30269
toReturn[i] = x/30269
}
return(toReturn)
}
#b.
myrandom(10,25)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u <- x - floor(x)
y <- as.integer(u <= .25)
return(y)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), "  out of 20 answers were correct")
# Question 5
#a.
myrandom  = function(n,x){
set.seed(x)
toReturn = numeric(n)
for (i in 1:n){
x = (171*(x-1)) %% 30269
toReturn[i] = x/30269
}
return(toReturn)
}
#b.
myrandom(10,25)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u <- x - floor(x)
y <- as.integer(u <= .25)
return(y)
}
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
x
u <- x - floor(x)
u
y <- as.integer(u <= .25)
y
return(y)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), "  out of 20 answers were correct")
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
cat(x)
u <- x - floor(x)
cat(u)
y <- as.integer(u <= .25)
return(y)
}
#b.
myguesses(20)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
cat(x, "\n")
u <- x - floor(x)
cat(u, "/n")
y <- as.integer(u <= .25)
return(y)
}
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
cat(x, "\n")
u <- x - floor(x)
cat(u, "\n")
y <- as.integer(u <= .25)
return(y)
}
#b.
myguesses(20)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
cat(x, "\n")
u <- x - floor(x)
cat(u, "\n")
y <- as.integer(u <= .25)
return(y)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), "  out of 20 answers were correct")
x = myrandom(n,325)
y = x - floor(x)
z = as.integer(u = .25)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
y = x - floor(x)
z = as.integer(y = .25)
return(z)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), "  out of 20 answers were correct")
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
y = x - floor(x)
z = as.integer(y = .25)
return(z)
}
#b.
myguesses(20)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u = x - floor(x)
y = as.integer(u = .25)
return(y)
}
#b.
myguesses(20)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u = x - floor(x)
y = as.integer(u <= .25)
return(y)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), "  out of 20 answers were correct")
y = as.integer(u >= .25)
return(y)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
u = x - floor(x)
y = as.integer(u >= .25)
return(y)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), "  out of 20 answers were correct")
cat(sum(myguesses(100)), "  out of 20 answers were correct")
#b.
myguesses(20)
cat(sum(myguesses(100)), "  out of 20 answers were correct")
cat(sum(myguesses(80)), "  out of 20 answers were correct")
cat(sum(myguesses(20)), "  out of 20 answers were correct")
#b.
myrandom(10,25)
myrandom(10,25) - floor(myrandom(10,25))
#b.
myrandom(10,25)
myrandom(10,25) - floor(myrandom(10,25))
#b.
myrandom(10,25)
s = myrandom(10,25) - floor(myrandom(10,25))
s
#b.
myrandom(10,25)
x = myrandom(n,325)
x = myrandom(20,325)
u = x - floor(x)
u
# Question 5
#a.
myrandom  = function(n,x){
set.seed(x)
toReturn = numeric(n)
for (i in 1:n){
x = (171*(x-1)) %% 30269
toReturn[i] = x/30269
}
return(toReturn)
}
#b.
myrandom(10,25)
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
y = as.integer(x <= .25)
return(y)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), "  out of 20 answers were correct")
# Question 6
#a.
myguesses = function(n){
x = myrandom(n,325)
toReturn = as.integer(x <= .25)
return(toReturn)
}
#b.
myguesses(20)
cat(sum(myguesses(20)), "  out of 20 answers were correct")
knitr::stitch("Meng51940633A5.R")
# Question 1
#a.
secant = function(x1,x2,f){
for(i in i:3){
x3 = x2-(f(x2)*(x2-x1)/(f(x2)-f(x1)))
x2 = x1
x1 = x3
}
return(x3)
}
#b.
f = function(x){
cos(x)
}
secant(1.56, 1.58, f)
# Question 1
#a.
secant = function(x1,x2,f){
for(i in 1:3){
x3 = x2-(f(x2)*(x2-x1)/(f(x2)-f(x1)))
x2 = x1
x1 = x3
}
return(x3)
}
#b.
f = function(x){
cos(x)
}
secant(1.56, 1.58, f)
knitr::stitch("Meng51940633A5.R")
